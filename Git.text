Isinya tentang Dokumentasi

--- Tahapan menggunakan Git ---

[ Pushing yang benar di Git / WSL ] : Ini flow yang benar ketika kamu ingin push project kamu ke Github.

// Git checkout -b "feature/namabranchbaru" : untuk membuat branch baru 
// Git add . : untuk menambahkan code kamu ke staging 
// Git commit -m "commit message" : untuk menyimpan perubahan yang dilakukan, tetapi tidak ada perubahan pada remote repository

[ Setelah kamu berhasil commit seperti contoh diatas, kamu bisa mengambil data terbaru dari development untuk ditempatkan dibawah alur project kamu, 
jadi walaupun kamu akan menggabungkan dengan commit terbaru dari development.]

[ Kamu harus "pulling" dari development terlebih dulu dan melakukan rebase, 
agar project kamu tidak terjadi conflict dan tetap mendapat update terbaru dari commit sebelumnya.]

// Git checkout development 
// Git pull : untuk menarik update terbaru dari project yang sudah kamu buat 
// Git chekout "feature/namabranchbaru" 
// Git rebase development : untuk mengambil semua data terbaru yang telah kamu pull untuk menempatkannya di bawah commit yang telah kamu buat. 
// Git status : cek status sebelum pull // Git push

--- Ganti Remote di Git ---

[ Mengganti remote yang ada di Git / WSL ] : Fungsinya agar kamu tidak mengganti source code / sumber asli code dengan code terbaru yang akan kamu push. 
jadi pastikan kamu ganti remotenya setelah kamu clone repository seseorang.

// Git remote -vv : untuk cek keseluruhan remote kamu dengan mendetail. 
// Git remote add : untuk menambahkan remote di wsl kamu. 
// Git remote remove : untuk menghapus remote di wsl kamu.

--- Membuat SSH Keys ---
Langkah 1 â€“ Membuat SSH Keys
// ssh-keygen -t rsa
Setelah Anda masukkan perintah ini, beberapa pertanyaan akan muncul:

Enter file in which to save the key (/home/tautvydas/.ssh/id_rsa):

Anda bisa membiarkan dan langsung tekan tombol ENTER tanpa perlu mengetik apapun, sehingga key generator bisa membuat pasangan kunci di lokasi default (dalam tutorial ini, kami memasukkan nama tud_id untuk menghindari duplikasi kunci, karena perangkat yang kami gunakan untuk uji coba sudah memiliki kunci id_rsa yang sudah terbuat sebelumnya). 2 pertanyaan akan muncul di layar selanjutnya:

Enter passphrase (empty for no passphrase):

Lalu:

Enter same passphrase again:

Untuk alasan kenyamanan, kita bisa membiarkannya tetap kosong. Dengan begitu, setelah membuat kunci untuk server remote, Anda tidak perlu lagi menggunakan password untuk masuk (log in). Anda cukup mengetikkan perintah ssh user@serverip dan Anda akan bisa masuk selama kunci benar-benar telah terpasang dengan baik. Namun bila Anda menginginkan keamanan yang lebih, Anda bisa memasukkan passphrase (password) di bagian ini. Jika Anda memilih opsi ini, Anda perlu memasukkan password setiap Anda terhubung ke perangkat remote.

Ya, hanya itu saja, sekarang Anda akan melihat tampiilan seperti berikut ini di Terminal:

Gambar yang muncul di komputer Anda PASTI BERBEDA dengan gambar di atas, begitu juga dengan kunci fingerprint.


